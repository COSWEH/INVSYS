import java.awt.*;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.*;
import java.net.*;
import java.security.SecureRandom;
import java.util.HashSet;
import java.util.Set;
import com.google.zxing.BarcodeFormat;
import com.google.zxing.BinaryBitmap;
import com.google.zxing.MultiFormatReader;
import com.google.zxing.RGBLuminanceSource;
import com.google.zxing.Result;
import com.google.zxing.WriterException;
import com.google.zxing.qrcode.QRCodeWriter;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.common.HybridBinarizer;
import com.google.zxing.qrcode.QRCodeWriter;
import com.google.zxing.qrcode.encoder.QRCode;
import java.awt.image.BufferedImage;

public class MainForm extends javax.swing.JFrame {
    Connection con = null;
    PreparedStatement statement = null;
    ResultSet result = null;

    String productDetails, getProduct_id;
    final String ALPHANUMERIC_CHARACTERS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
    final SecureRandom SECURE_RANDOM = new SecureRandom();
    
    public MainForm() {
        initComponents();
        try{
            con = DriverManager.getConnection("jdbc:mysql://localhost/grampis", "root", "");
        } catch(SQLException e){
            System.out.println(e.getMessage());
        }
        setLocationRelativeTo(null);
        setIcon();
        displayLogo();
        //database list
        fillListView();
        jtHeader();
        
        jtpOptions.setSelectedIndex(3);
    }
    class JPanelGradient extends JPanel {
    private Color color1;
    private Color color2;
    
    public JPanelGradient(Color color1, Color color2) {
        this.color1 = color1;
        this.color2 = color2;
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2d = (Graphics2D) g.create();
        int w = getWidth();
        int h = getHeight();

        GradientPaint gp = new GradientPaint(0, 0, color1, 0, h, color2);
        g2d.setPaint(gp);
        g2d.fillRect(0, 0, w, h);

        g2d.dispose();
    }
}
    
    class JButtonWithRadius extends JButton {
        private int radius;

        public JButtonWithRadius(String text, int radius) {
            super(text);
            this.radius = radius;
        }

        @Override
        protected void paintComponent(Graphics g) {
            Graphics2D g2d = (Graphics2D) g.create();

            g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

            g2d.setColor(getBackground());
            g2d.fillRoundRect(0, 0, getWidth(), getHeight(), radius, radius);

            g2d.setColor(getForeground());
            FontMetrics fm = g2d.getFontMetrics();
            int x = (getWidth() - fm.stringWidth(getText())) / 2;
            int y = (getHeight() + fm.getHeight()) / 2;
            g2d.drawString(getText(), x, y);

            g2d.dispose();
        }

        @Override
        public Dimension getPreferredSize() {
            Dimension size = super.getPreferredSize();
            size.width += radius;
            size.height += radius;
            return size;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jlNeustLogo = new javax.swing.JLabel();
        jlLogoutLogo = new javax.swing.JLabel();
        jPanel2 = new JPanelGradient(new Color(63,100,126), new Color(109,163,161));
        btnAddProduct = new JButtonWithRadius("Add Product", 25);
        btnUpdateProduct = new JButtonWithRadius("Update Product", 25);
        btnDeleteProduct = new JButtonWithRadius("Delete Product", 25);
        jSeparator6 = new javax.swing.JSeparator();
        jtpOptions = new javax.swing.JTabbedPane();
        jpAddProduct = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtAddProduct = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jtfAddProductName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtfAddProductBrand = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtfAddProductPrice = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtfAddProductQuantity = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        btnSaveProduct = new javax.swing.JButton();
        btnAddClear = new javax.swing.JButton();
        btnAddCancel = new javax.swing.JButton();
        jpUpdateProduct = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtUpdateProduct = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jtfUpdProductName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jtfUpdProductBrand = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jtfUpdProductPrice = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jtfUpdProductQuantity = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        btnUpdProduct = new javax.swing.JButton();
        btnUpdClear = new javax.swing.JButton();
        btnUpdCancel = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jtfUpdProductId = new javax.swing.JTextField();
        jpDeleteProduct = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtDeleteProduct = new javax.swing.JTable();
        jSeparator4 = new javax.swing.JSeparator();
        btnDelProduct = new javax.swing.JButton();
        btnDelClear = new javax.swing.JButton();
        btnDelCancel = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jlSelectedProduct = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jpMainForm = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtMain = new javax.swing.JTable();
        jlQrCode = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jcbReadQR = new javax.swing.JCheckBox();
        btnSearch = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jtfSearch = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Product Inventory System");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(63, 100, 126));

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("PRODUCT INVENTORY SYSTEM");

        jlLogoutLogo.setToolTipText("Logout");
        jlLogoutLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jlLogoutLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlLogoutLogoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlNeustLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 785, Short.MAX_VALUE)
                .addComponent(jlLogoutLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(142, 142, 142)
                    .addComponent(jLabel2)
                    .addContainerGap(164, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jlLogoutLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 53, Short.MAX_VALUE))
                    .addComponent(jlNeustLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(31, 31, 31)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(31, Short.MAX_VALUE)))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 910, -1));

        jPanel2.setBackground(new java.awt.Color(63, 100, 126));

        btnAddProduct.setBackground(new java.awt.Color(11, 135, 147));
        btnAddProduct.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAddProduct.setForeground(new java.awt.Color(255, 255, 255));
        btnAddProduct.setText("Add Product");
        btnAddProduct.setBorder(null);
        btnAddProduct.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProductActionPerformed(evt);
            }
        });

        btnUpdateProduct.setBackground(new java.awt.Color(11, 135, 147));
        btnUpdateProduct.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnUpdateProduct.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateProduct.setText("Update Product");
        btnUpdateProduct.setBorder(null);
        btnUpdateProduct.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdateProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateProductActionPerformed(evt);
            }
        });

        btnDeleteProduct.setBackground(new java.awt.Color(11, 135, 147));
        btnDeleteProduct.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDeleteProduct.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteProduct.setText("Delete Product");
        btnDeleteProduct.setBorder(null);
        btnDeleteProduct.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDeleteProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteProductActionPerformed(evt);
            }
        });

        jSeparator6.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUpdateProduct, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                    .addComponent(btnDeleteProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator6))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(btnAddProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnUpdateProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDeleteProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 183, Short.MAX_VALUE)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 130, 460));

        jtpOptions.setBackground(new java.awt.Color(9, 49, 112));
        jtpOptions.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        jpAddProduct.setBackground(new java.awt.Color(109, 163, 161));

        jtAddProduct.setBackground(new java.awt.Color(109, 163, 161));
        jtAddProduct.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jtAddProduct.setForeground(new java.awt.Color(255, 255, 255));
        jtAddProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Product ID", "Product Name", "Product Brand", "Product Price", "Product Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtAddProduct.setGridColor(new java.awt.Color(0, 0, 0));
        jtAddProduct.setSelectionBackground(new java.awt.Color(255, 255, 255));
        jtAddProduct.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jtAddProduct.setShowHorizontalLines(false);
        jtAddProduct.getTableHeader().setResizingAllowed(false);
        jtAddProduct.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jtAddProduct);

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Product Name: ");

        jtfAddProductName.setBackground(new java.awt.Color(109, 163, 161));
        jtfAddProductName.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jtfAddProductName.setForeground(new java.awt.Color(255, 255, 255));
        jtfAddProductName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        jLabel3.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Product Brand: ");

        jtfAddProductBrand.setBackground(new java.awt.Color(109, 163, 161));
        jtfAddProductBrand.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jtfAddProductBrand.setForeground(new java.awt.Color(255, 255, 255));
        jtfAddProductBrand.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        jLabel4.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Product Price: ");

        jtfAddProductPrice.setBackground(new java.awt.Color(109, 163, 161));
        jtfAddProductPrice.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jtfAddProductPrice.setForeground(new java.awt.Color(255, 255, 255));
        jtfAddProductPrice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jtfAddProductPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfAddProductPriceKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Product Quantity: ");

        jtfAddProductQuantity.setBackground(new java.awt.Color(109, 163, 161));
        jtfAddProductQuantity.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jtfAddProductQuantity.setForeground(new java.awt.Color(255, 255, 255));
        jtfAddProductQuantity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jtfAddProductQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfAddProductQuantityActionPerformed(evt);
            }
        });
        jtfAddProductQuantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfAddProductQuantityKeyReleased(evt);
            }
        });

        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));

        btnSaveProduct.setBackground(new java.awt.Color(109, 163, 161));
        btnSaveProduct.setFont(new java.awt.Font("Segoe UI Light", 1, 10)); // NOI18N
        btnSaveProduct.setForeground(new java.awt.Color(51, 51, 51));
        btnSaveProduct.setText("save");
        btnSaveProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveProductActionPerformed(evt);
            }
        });

        btnAddClear.setBackground(new java.awt.Color(109, 163, 161));
        btnAddClear.setFont(new java.awt.Font("Segoe UI Light", 1, 10)); // NOI18N
        btnAddClear.setForeground(new java.awt.Color(51, 51, 51));
        btnAddClear.setText("clear");
        btnAddClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddClearActionPerformed(evt);
            }
        });

        btnAddCancel.setBackground(new java.awt.Color(109, 163, 161));
        btnAddCancel.setFont(new java.awt.Font("Segoe UI Light", 1, 10)); // NOI18N
        btnAddCancel.setForeground(new java.awt.Color(51, 51, 51));
        btnAddCancel.setText("cancel");
        btnAddCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpAddProductLayout = new javax.swing.GroupLayout(jpAddProduct);
        jpAddProduct.setLayout(jpAddProductLayout);
        jpAddProductLayout.setHorizontalGroup(
            jpAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpAddProductLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfAddProductName)
                    .addComponent(jtfAddProductBrand)
                    .addComponent(jtfAddProductPrice)
                    .addComponent(jtfAddProductQuantity)
                    .addComponent(jSeparator2)
                    .addGroup(jpAddProductLayout.createSequentialGroup()
                        .addGroup(jpAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addGroup(jpAddProductLayout.createSequentialGroup()
                                .addComponent(btnSaveProduct)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAddClear)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAddCancel)))
                        .addGap(0, 6, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpAddProductLayout.setVerticalGroup(
            jpAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpAddProductLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jpAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpAddProductLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtfAddProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtfAddProductBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtfAddProductPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtfAddProductQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnSaveProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAddClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAddCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtpOptions.addTab("Add Product", jpAddProduct);

        jpUpdateProduct.setBackground(new java.awt.Color(109, 163, 161));

        jtUpdateProduct.setBackground(new java.awt.Color(109, 163, 161));
        jtUpdateProduct.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jtUpdateProduct.setForeground(new java.awt.Color(255, 255, 255));
        jtUpdateProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Product ID", "Product Name", "Product Brand", "Product Price", "Product Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtUpdateProduct.setGridColor(new java.awt.Color(0, 0, 0));
        jtUpdateProduct.setSelectionBackground(new java.awt.Color(255, 255, 255));
        jtUpdateProduct.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jtUpdateProduct.setShowHorizontalLines(false);
        jtUpdateProduct.getTableHeader().setResizingAllowed(false);
        jtUpdateProduct.getTableHeader().setReorderingAllowed(false);
        jtUpdateProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtUpdateProductMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jtUpdateProduct);

        jLabel6.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Product Name: ");

        jtfUpdProductName.setBackground(new java.awt.Color(109, 163, 161));
        jtfUpdProductName.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jtfUpdProductName.setForeground(new java.awt.Color(255, 255, 255));
        jtfUpdProductName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jtfUpdProductName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfUpdProductNameActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Product Brand: ");

        jtfUpdProductBrand.setBackground(new java.awt.Color(109, 163, 161));
        jtfUpdProductBrand.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jtfUpdProductBrand.setForeground(new java.awt.Color(255, 255, 255));
        jtfUpdProductBrand.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        jLabel8.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Product Price: ");

        jtfUpdProductPrice.setBackground(new java.awt.Color(109, 163, 161));
        jtfUpdProductPrice.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jtfUpdProductPrice.setForeground(new java.awt.Color(255, 255, 255));
        jtfUpdProductPrice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jtfUpdProductPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfUpdProductPriceKeyReleased(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Product Quantity: ");

        jtfUpdProductQuantity.setBackground(new java.awt.Color(109, 163, 161));
        jtfUpdProductQuantity.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jtfUpdProductQuantity.setForeground(new java.awt.Color(255, 255, 255));
        jtfUpdProductQuantity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jtfUpdProductQuantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfUpdProductQuantityKeyReleased(evt);
            }
        });

        jSeparator3.setForeground(new java.awt.Color(255, 255, 255));

        btnUpdProduct.setBackground(new java.awt.Color(109, 163, 161));
        btnUpdProduct.setFont(new java.awt.Font("Segoe UI Light", 1, 10)); // NOI18N
        btnUpdProduct.setForeground(new java.awt.Color(51, 51, 51));
        btnUpdProduct.setText("update");
        btnUpdProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdProductActionPerformed(evt);
            }
        });

        btnUpdClear.setBackground(new java.awt.Color(109, 163, 161));
        btnUpdClear.setFont(new java.awt.Font("Segoe UI Light", 1, 10)); // NOI18N
        btnUpdClear.setForeground(new java.awt.Color(51, 51, 51));
        btnUpdClear.setText("clear");
        btnUpdClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdClearActionPerformed(evt);
            }
        });

        btnUpdCancel.setBackground(new java.awt.Color(109, 163, 161));
        btnUpdCancel.setFont(new java.awt.Font("Segoe UI Light", 1, 10)); // NOI18N
        btnUpdCancel.setForeground(new java.awt.Color(51, 51, 51));
        btnUpdCancel.setText("cancel");
        btnUpdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdCancelActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Product Id: ");

        jtfUpdProductId.setBackground(new java.awt.Color(109, 163, 161));
        jtfUpdProductId.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jtfUpdProductId.setForeground(new java.awt.Color(255, 255, 255));
        jtfUpdProductId.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        javax.swing.GroupLayout jpUpdateProductLayout = new javax.swing.GroupLayout(jpUpdateProduct);
        jpUpdateProduct.setLayout(jpUpdateProductLayout);
        jpUpdateProductLayout.setHorizontalGroup(
            jpUpdateProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpUpdateProductLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpUpdateProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfUpdProductName)
                    .addComponent(jtfUpdProductBrand)
                    .addComponent(jtfUpdProductPrice)
                    .addComponent(jtfUpdProductQuantity)
                    .addComponent(jSeparator3)
                    .addComponent(jtfUpdProductId)
                    .addGroup(jpUpdateProductLayout.createSequentialGroup()
                        .addGroup(jpUpdateProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addGroup(jpUpdateProductLayout.createSequentialGroup()
                                .addComponent(btnUpdProduct)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnUpdClear)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnUpdCancel)))
                        .addGap(0, 8, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpUpdateProductLayout.setVerticalGroup(
            jpUpdateProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpUpdateProductLayout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(jpUpdateProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpUpdateProductLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfUpdProductId, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfUpdProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtfUpdProductBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtfUpdProductPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtfUpdProductQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpUpdateProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnUpdProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnUpdClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnUpdCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jtpOptions.addTab("Update Product", jpUpdateProduct);

        jpDeleteProduct.setBackground(new java.awt.Color(109, 163, 161));

        jtDeleteProduct.setBackground(new java.awt.Color(109, 163, 161));
        jtDeleteProduct.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jtDeleteProduct.setForeground(new java.awt.Color(255, 255, 255));
        jtDeleteProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Product ID", "Product Name", "Product Brand", "Product Price", "Product Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtDeleteProduct.setGridColor(new java.awt.Color(0, 0, 0));
        jtDeleteProduct.setSelectionBackground(new java.awt.Color(255, 255, 255));
        jtDeleteProduct.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jtDeleteProduct.setShowHorizontalLines(false);
        jtDeleteProduct.getTableHeader().setResizingAllowed(false);
        jtDeleteProduct.getTableHeader().setReorderingAllowed(false);
        jtDeleteProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtDeleteProductMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jtDeleteProduct);

        jSeparator4.setForeground(new java.awt.Color(255, 255, 255));

        btnDelProduct.setBackground(new java.awt.Color(109, 163, 161));
        btnDelProduct.setFont(new java.awt.Font("Segoe UI Light", 1, 10)); // NOI18N
        btnDelProduct.setForeground(new java.awt.Color(51, 51, 51));
        btnDelProduct.setText("delete");
        btnDelProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelProductActionPerformed(evt);
            }
        });

        btnDelClear.setBackground(new java.awt.Color(109, 163, 161));
        btnDelClear.setFont(new java.awt.Font("Segoe UI Light", 1, 10)); // NOI18N
        btnDelClear.setForeground(new java.awt.Color(51, 51, 51));
        btnDelClear.setText("clear");
        btnDelClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelClearActionPerformed(evt);
            }
        });

        btnDelCancel.setBackground(new java.awt.Color(109, 163, 161));
        btnDelCancel.setFont(new java.awt.Font("Segoe UI Light", 1, 10)); // NOI18N
        btnDelCancel.setForeground(new java.awt.Color(51, 51, 51));
        btnDelCancel.setText("cancel");
        btnDelCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelCancelActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Product selected: ");

        jlSelectedProduct.setFont(new java.awt.Font("Segoe UI Semibold", 0, 15)); // NOI18N
        jlSelectedProduct.setForeground(new java.awt.Color(255, 255, 255));

        jSeparator5.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jpDeleteProductLayout = new javax.swing.GroupLayout(jpDeleteProduct);
        jpDeleteProduct.setLayout(jpDeleteProductLayout);
        jpDeleteProductLayout.setHorizontalGroup(
            jpDeleteProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpDeleteProductLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpDeleteProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator4)
                    .addComponent(jSeparator5)
                    .addGroup(jpDeleteProductLayout.createSequentialGroup()
                        .addGroup(jpDeleteProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jlSelectedProduct)
                            .addGroup(jpDeleteProductLayout.createSequentialGroup()
                                .addComponent(btnDelProduct)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDelClear)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDelCancel)))
                        .addGap(0, 12, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpDeleteProductLayout.setVerticalGroup(
            jpDeleteProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpDeleteProductLayout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addGroup(jpDeleteProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jpDeleteProductLayout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jpDeleteProductLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlSelectedProduct)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpDeleteProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDelProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDelClear, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDelCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56))))
        );

        jtpOptions.addTab("Delete Product", jpDeleteProduct);

        jpMainForm.setBackground(new java.awt.Color(109, 163, 161));

        jtMain.setBackground(new java.awt.Color(109, 163, 161));
        jtMain.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jtMain.setForeground(new java.awt.Color(255, 255, 255));
        jtMain.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Product ID", "Product Name", "Product Brand", "Product Price", "Product Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtMain.setToolTipText("Click to display the QR Code of the product");
        jtMain.setGridColor(new java.awt.Color(255, 255, 255));
        jtMain.setSelectionBackground(new java.awt.Color(103, 124, 138));
        jtMain.setShowHorizontalLines(false);
        jtMain.setShowVerticalLines(false);
        jtMain.getTableHeader().setResizingAllowed(false);
        jtMain.getTableHeader().setReorderingAllowed(false);
        jtMain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtMainMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtMain);

        jlQrCode.setToolTipText("PLACE FOR QR CODE");

        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));

        jcbReadQR.setBackground(new java.awt.Color(255, 255, 255));
        jcbReadQR.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        jcbReadQR.setForeground(new java.awt.Color(255, 255, 255));
        jcbReadQR.setText("Read Qr Code");
        jcbReadQR.setToolTipText("(Optional)");
        jcbReadQR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbReadQRActionPerformed(evt);
            }
        });

        btnSearch.setBackground(new java.awt.Color(109, 163, 161));
        btnSearch.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setText("Search");
        btnSearch.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(109, 163, 161));
        btnClear.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        btnClear.setForeground(new java.awt.Color(255, 255, 255));
        btnClear.setText("Clear");
        btnClear.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jtfSearch.setBackground(new java.awt.Color(109, 163, 161));
        jtfSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jtfSearch.setForeground(new java.awt.Color(255, 255, 255));
        jtfSearch.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        jLabel12.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Search by product brand:");

        javax.swing.GroupLayout jpMainFormLayout = new javax.swing.GroupLayout(jpMainForm);
        jpMainForm.setLayout(jpMainFormLayout);
        jpMainFormLayout.setHorizontalGroup(
            jpMainFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpMainFormLayout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addGroup(jpMainFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpMainFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jlQrCode, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                        .addComponent(jSeparator1))
                    .addComponent(jcbReadQR))
                .addGap(32, 32, 32)
                .addGroup(jpMainFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jpMainFormLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtfSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jpMainFormLayout.setVerticalGroup(
            jpMainFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpMainFormLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpMainFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpMainFormLayout.createSequentialGroup()
                        .addGap(0, 21, Short.MAX_VALUE)
                        .addGroup(jpMainFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpMainFormLayout.createSequentialGroup()
                        .addComponent(jlQrCode, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jcbReadQR)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jtpOptions.addTab("Main Form", jpMainForm);

        getContentPane().add(jtpOptions, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, 780, 490));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteProductActionPerformed
        // TODO add your handling code here:
        productDetails = null;
        jlQrCode.setIcon(null);
        jtpOptions.setSelectedIndex(2);
        jtMain.clearSelection();
        jtAddProduct.clearSelection();
        jtUpdateProduct.clearSelection();       
        
        btnAddProduct.setBackground(new Color(11, 135, 147));
        btnAddProduct.setForeground(Color.WHITE);
        btnUpdateProduct.setBackground(new Color(11, 135, 147));
        btnUpdateProduct.setForeground(Color.WHITE);       
        btnDeleteProduct.setBackground(new Color(36, 59, 85));
        btnDeleteProduct.setForeground(Color.WHITE);    
        btnAddProduct.setEnabled(false);
        btnUpdateProduct.setEnabled(false);
    }//GEN-LAST:event_btnDeleteProductActionPerformed

    private void btnAddProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProductActionPerformed
        // TODO add your handling code here: 
        productDetails = null;
        jlQrCode.setIcon(null);
        jtpOptions.setSelectedIndex(0);
        jtMain.clearSelection();
        jtUpdateProduct.clearSelection();
        jtDeleteProduct.clearSelection();
        
        btnAddProduct.setBackground(new Color(36, 59, 85));
        btnAddProduct.setForeground(Color.WHITE);
        btnUpdateProduct.setBackground(new Color(11, 135, 147));
        btnUpdateProduct.setForeground(Color.WHITE);       
        btnDeleteProduct.setBackground(new Color(11, 135, 147));
        btnDeleteProduct.setForeground(Color.WHITE);
        
        btnUpdateProduct.setEnabled(false);
        btnDeleteProduct.setEnabled(false);
    }//GEN-LAST:event_btnAddProductActionPerformed

    private void btnUpdateProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateProductActionPerformed
        // TODO add your handling code here:
        jtfUpdProductId.setEnabled(false);
        forUpdateTab(false);
        
        jlQrCode.setIcon(null);
        productDetails = null;
        jtpOptions.setSelectedIndex(1);
        jtMain.clearSelection();
        jtAddProduct.clearSelection();
        jtDeleteProduct.clearSelection();
        btnAddProduct.setBackground(new Color(11, 135, 147));
        btnAddProduct.setForeground(Color.WHITE);
        btnUpdateProduct.setBackground(new Color(36, 59, 85));
        btnUpdateProduct.setForeground(Color.WHITE);              
        btnDeleteProduct.setBackground(new Color(11, 135, 147));
        btnDeleteProduct.setForeground(Color.WHITE);
        
        btnAddProduct.setEnabled(false);
        btnDeleteProduct.setEnabled(false);
    }//GEN-LAST:event_btnUpdateProductActionPerformed

    private void jlLogoutLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlLogoutLogoMouseClicked
        // TODO add your handling code here:
        int result = JOptionPane.showConfirmDialog(this,"Are you sure you want to logout?", "CONFIRM LOGOUT",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(result == JOptionPane.YES_OPTION){
            LoginOrRegisterForm lorForm = new LoginOrRegisterForm();
            lorForm.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_jlLogoutLogoMouseClicked

    private void jtMainMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtMainMouseClicked
        // TODO add your handling code here:
        int product_price, product_quantity;
        String product_id, product_name, product_brand, details;
        
        int row = jtMain.getSelectedRow();      
        product_id = (jtMain.getModel().getValueAt(row, 0).toString());
        product_name = (jtMain.getModel().getValueAt(row,1).toString());
        product_brand = (jtMain.getModel().getValueAt(row,2).toString());
        product_price = Integer.parseInt(jtMain.getModel().getValueAt(row, 3).toString());
        product_quantity = Integer.parseInt(jtMain.getModel().getValueAt(row, 4).toString());
        
        String productInfo = product_id + "\n" +
                    product_name + "\n" +
                    product_brand + "\n" +
                    product_price + "\n" +
                    product_quantity;
        details = "Product Details\n" +
                    "____________________\n\n" +
                    "Product Id:              " + product_id + "\n" +
                    "Product Name:      " + product_name + "\n" +
                    "Product Brand:      " + product_brand + "\n" +
                    "Product Price:        " + product_price + "\n" +
                    "Product Quantity:   " + product_quantity + "\n";                        
        productDetails = details;       
        QRCodeWriter qrWriter = new QRCodeWriter();
        
        int size = 115;      
        try {
            // Generate a BitMatrix from the text to be encoded
            BitMatrix bitMatrix = qrWriter.encode(productInfo, BarcodeFormat.QR_CODE, size, size);
            // Convert the BitMatrix to a BufferedImage
            BufferedImage qrImage = new BufferedImage(bitMatrix.getWidth(), bitMatrix.getHeight(), BufferedImage.TYPE_INT_RGB);
            for (int x = 0; x < bitMatrix.getWidth(); x++) {
                for (int y = 0; y < bitMatrix.getHeight(); y++) {
                    qrImage.setRGB(x, y, bitMatrix.get(x, y) ? 0xFF000000 : 0xFFFFFFFF);
                }
            }
            // Convert the BufferedImage to an ImageIcon
            ImageIcon icon = new ImageIcon(qrImage);
            // Set the ImageIcon as the label's icon
            jlQrCode.setIcon(icon);
        } catch (WriterException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jtMainMouseClicked

    private void jcbReadQRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbReadQRActionPerformed
        // TODO add your handling code here:
        if (jcbReadQR.isSelected()) {
            if(productDetails != null) {
                JOptionPane.showMessageDialog(this, productDetails);
                jcbReadQR.setSelected(false);
            } else {
                JOptionPane.showMessageDialog(null, "No QR code found", "Error", JOptionPane.ERROR_MESSAGE);
                jcbReadQR.setSelected(false);
            }
        }
    }//GEN-LAST:event_jcbReadQRActionPerformed

    private void btnAddCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCancelActionPerformed
        // TODO add your handling code here:
        jtpOptions.setSelectedIndex(3);
        jtAddProduct.clearSelection();
        
        btnAddProduct.setBackground(new Color(11, 135, 147));
        btnAddProduct.setForeground(Color.WHITE);
        
        jtfAddProductName.setText("");
        jtfAddProductBrand.setText("");
        jtfAddProductPrice.setText("");
        jtfAddProductQuantity.setText("");
        
        btnUpdateProduct.setEnabled(true);
        btnDeleteProduct.setEnabled(true);
    }//GEN-LAST:event_btnAddCancelActionPerformed

    private void btnUpdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdCancelActionPerformed
        // TODO add your handling code here:
        jtfUpdProductId.setEnabled(true);
        jtpOptions.setSelectedIndex(3);
        jtUpdateProduct.clearSelection();
        
        btnUpdateProduct.setBackground(new Color(11, 135, 147));
        btnUpdateProduct.setForeground(Color.WHITE);
        
        jtfUpdProductId.setText("");
        jtfUpdProductName.setText("");
        jtfUpdProductBrand.setText("");
        jtfUpdProductPrice.setText("");
        jtfUpdProductQuantity.setText("");
        
        btnAddProduct.setEnabled(true);
        btnDeleteProduct.setEnabled(true);
    }//GEN-LAST:event_btnUpdCancelActionPerformed

    private void btnDelCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelCancelActionPerformed
        // TODO add your handling code here:
        getProduct_id = "";
        
        jlSelectedProduct.setText("");
        jtpOptions.setSelectedIndex(3);
        jtDeleteProduct.clearSelection();
        
        btnDeleteProduct.setBackground(new Color(11, 135, 147));
        btnDeleteProduct.setForeground(Color.WHITE);
        
        btnAddProduct.setEnabled(true);
        btnUpdateProduct.setEnabled(true);
    }//GEN-LAST:event_btnDelCancelActionPerformed

    private void jtDeleteProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtDeleteProductMouseClicked
        // TODO add your handling code here:
        String product_ID, product_Name, product_Brand;
        int product_Price, product_Quantity;
        String selectedProduct;
        int row = jtDeleteProduct.getSelectedRow(); 
        
        product_ID = (jtDeleteProduct.getModel().getValueAt(row, 0).toString());
        product_Name = (jtDeleteProduct.getModel().getValueAt(row, 1).toString());
        product_Brand = (jtDeleteProduct.getModel().getValueAt(row, 2).toString());
        product_Price = Integer.parseInt(jtDeleteProduct.getModel().getValueAt(row, 3).toString());
        product_Quantity = Integer.parseInt(jtDeleteProduct.getModel().getValueAt(row, 4).toString());
        
        getProduct_id = product_ID;
        
        selectedProduct = "<html> Product Id: " + product_ID + "<br>" + "<br>" + "<hr>" +
                          "Product Name:     " + product_Name + "<br>" + "<hr>" +
                          "Product Brand:    " + product_Brand + "<br>" + "<hr>" +
                          "Product Price:    " + product_Price + "<br>" + "<hr>" +
                          "Product Quantity: " + product_Quantity + "<hr>" + "</html>";
        jlSelectedProduct.setText(selectedProduct);       
    }//GEN-LAST:event_jtDeleteProductMouseClicked

    private void btnDelClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelClearActionPerformed
        // TODO add your handling code here:
        getProduct_id = "";
        
        jlSelectedProduct.setText("");
        jtDeleteProduct.clearSelection();
    }//GEN-LAST:event_btnDelClearActionPerformed

    private void btnAddClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddClearActionPerformed
        // TODO add your handling code here:
        jtfAddProductName.setText("");
        jtfAddProductBrand.setText("");
        jtfAddProductPrice.setText("");
        jtfAddProductQuantity.setText("");
    }//GEN-LAST:event_btnAddClearActionPerformed

    private void btnUpdClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdClearActionPerformed
        // TODO add your handling code here:
        jtUpdateProduct.clearSelection();
        forUpdateTab(false);
        
        jtfUpdProductId.setText("");
        jtfUpdProductName.setText("");
        jtfUpdProductBrand.setText("");
        jtfUpdProductPrice.setText("");
        jtfUpdProductQuantity.setText("");
    }//GEN-LAST:event_btnUpdClearActionPerformed

    private void btnSaveProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveProductActionPerformed
        // TODO add your handling code here:
        String product_ID, product_Name, product_Brand;
        int product_Price, product_Quantity;  
        int length = 20; // lengths strings of different lengths
        
        if (jtfAddProductName.getText().isEmpty() ||
            jtfAddProductBrand.getText().isEmpty() ||
            jtfAddProductPrice.getText().isEmpty() ||
            jtfAddProductQuantity.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Complete all fields with correct entries!", "ERROR", JOptionPane.ERROR_MESSAGE);         
        } else {
            Set<String> generatedStrings = new HashSet<>();
            product_ID = generateRandomAlphanumericString(length);
            
            if (!generatedStrings.contains(product_ID)) {
                generatedStrings.add(product_ID);
            }
            
            product_Name = jtfAddProductName.getText();
            product_Brand = jtfAddProductBrand.getText();
            product_Price = Integer.parseInt(jtfAddProductPrice.getText());
            product_Quantity = Integer.parseInt(jtfAddProductQuantity.getText());  
            
            try{
                String query = "INSERT INTO `tblproduct`(`product_id`, `product_name`, `product_brand`, `product_price`, `product_quantity`) VALUES ('"+product_ID+"', '"+product_Name+"', '"+product_Brand+"', '"+product_Price+"', '"+product_Quantity+"')";
                statement = con.prepareStatement(query);
                statement.executeUpdate();
                
            } catch (Exception e){

            }
            
            fillListView();
            
            JOptionPane.showMessageDialog(this, "Your product has been successfully added.", "Success", JOptionPane.INFORMATION_MESSAGE);
            jtfAddProductName.setText("");
            jtfAddProductBrand.setText("");
            jtfAddProductPrice.setText("");
            jtfAddProductQuantity.setText("");
        }
    }//GEN-LAST:event_btnSaveProductActionPerformed

    private void btnUpdProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdProductActionPerformed
        // TODO add your handling code here:
        String product_ID, product_Name, product_Brand;
        int product_Price, product_Quantity; 
        
        if (jtfUpdProductName.getText().isEmpty() ||
            jtfUpdProductBrand.getText().isEmpty() ||
            jtfUpdProductPrice.getText().isEmpty() ||
            jtfUpdProductQuantity.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Complete all fields with correct entries!", "ERROR", JOptionPane.ERROR_MESSAGE);         
        } else {
            product_ID = jtfUpdProductId.getText();
            product_Name = jtfUpdProductName.getText();
            product_Brand = jtfUpdProductBrand.getText();
            product_Price = Integer.parseInt(jtfUpdProductPrice.getText());
            product_Quantity = Integer.parseInt(jtfUpdProductQuantity.getText());  
            
            try{
                String query = "UPDATE `tblproduct` SET `product_name`='"+product_Name+"', `product_brand`='"+product_Brand+"',`product_price`='"+product_Price+"', `product_quantity`='"+product_Quantity+"' WHERE product_id ='"+product_ID+"'";
                statement = con.prepareStatement(query);        
                statement.executeUpdate();
            
            } catch (Exception e){

            }
            
            fillListView();
            
            JOptionPane.showMessageDialog(this, "Your product has been successfully updated.", "Success", JOptionPane.INFORMATION_MESSAGE);
            jtfUpdProductId.setText("");
            jtfUpdProductName.setText("");
            jtfUpdProductBrand.setText("");
            jtfUpdProductPrice.setText("");
            jtfUpdProductQuantity.setText("");
            
            forUpdateTab(false);
        }
    }//GEN-LAST:event_btnUpdProductActionPerformed

    private void jtUpdateProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtUpdateProductMouseClicked
        // TODO add your handling code here:
        forUpdateTab(true);
        
        String product_ID, product_Name, product_Brand;
        int product_Price, product_Quantity;
        int row = jtUpdateProduct.getSelectedRow();
        
        product_ID = (jtUpdateProduct.getModel().getValueAt(row, 0).toString());
        product_Name = (jtUpdateProduct.getModel().getValueAt(row,1).toString());
        product_Brand = (jtUpdateProduct.getModel().getValueAt(row,2).toString());
        product_Price = Integer.parseInt(jtUpdateProduct.getModel().getValueAt(row, 3).toString());
        product_Quantity = Integer.parseInt(jtUpdateProduct.getModel().getValueAt(row, 4).toString());
        
        jtfUpdProductId.setText(product_ID);
        jtfUpdProductName.setText(product_Name);
        jtfUpdProductBrand.setText(product_Brand);  
        jtfUpdProductPrice.setText(String.valueOf(product_Price));
        jtfUpdProductQuantity.setText(String.valueOf(product_Quantity));
    }//GEN-LAST:event_jtUpdateProductMouseClicked

    private void btnDelProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelProductActionPerformed
        // TODO add your handling code here:
        if (!jlSelectedProduct.getText().isEmpty()) {
            int result = JOptionPane.showConfirmDialog(this,"Are you sure you want to delete the selected record?", "DELETE RECORD",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        
            if(result == JOptionPane.YES_OPTION){
                try{
                    String  query = "DELETE FROM `tblproduct` WHERE `product_id` = '"+getProduct_id+"'";
                    statement = con.prepareStatement(query);
                    statement.execute();

                    fillListView();

                    jlSelectedProduct.setText("");
                    JOptionPane.showMessageDialog(this, "Product has been successfully deleted","INFORMATION", JOptionPane.OK_OPTION);
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(null,"Error in deleting... "+e);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please first select the product to delete!","ERROR", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_btnDelProductActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        jtfSearch.setText("");
        jlQrCode.setIcon(null);
        productDetails = null;
        fillListView();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here: 
        String getBrand = jtfSearch.getText();
            
        if (getBrand.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a product brand to search.", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                String query = "SELECT * FROM tblproduct WHERE product_brand = '" + getBrand + "'";
                statement = con.prepareStatement(query);
                result = statement.executeQuery();
                
                if (!result.next()) {
                    JOptionPane.showMessageDialog(this, getBrand + " brand does not exist!", "ERROR", JOptionPane.ERROR_MESSAGE);
                    fillListView();
                } else {
                    DefaultTableModel tm = (DefaultTableModel)jtMain.getModel();
                    tm.setRowCount(0);
                    // Populate the table with the search results
                    do {
                        Object[] o = {
                            result.getString("product_id"),
                            result.getString("product_name"),
                            result.getString("product_brand"),
                            result.getInt("product_price"),
                            result.getInt("product_quantity")
                        };
                        tm.addRow(o);
                    } while (result.next());
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error in Product Grid View....." + e);
            }
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void jtfUpdProductNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfUpdProductNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfUpdProductNameActionPerformed

    private void jtfAddProductPriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfAddProductPriceKeyReleased
        // TODO add your handling code here:
        String text = jtfAddProductPrice.getText();
        
        //allow only digits
        if (text.matches("\\d*")) {
            // The input is valid
            jtfAddProductPrice.setText(text);
        } else {
            // The input is not valid
            JOptionPane.showMessageDialog(this, "Please enter numbers only.", "Input Error", JOptionPane.ERROR_MESSAGE);
            jtfAddProductPrice.setText("");
        }
    }//GEN-LAST:event_jtfAddProductPriceKeyReleased

    private void jtfAddProductQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfAddProductQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfAddProductQuantityActionPerformed

    private void jtfAddProductQuantityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfAddProductQuantityKeyReleased
        // TODO add your handling code here:
        String text = jtfAddProductQuantity.getText();
        
        //allow only digits
        if (text.matches("\\d*")) {
            // The input is valid
            jtfAddProductQuantity.setText(text);
        } else {
            // The input is not valid
            JOptionPane.showMessageDialog(this, "Please enter numbers only.", "Input Error", JOptionPane.ERROR_MESSAGE);
            jtfAddProductQuantity.setText("");
        }
    }//GEN-LAST:event_jtfAddProductQuantityKeyReleased

    private void jtfUpdProductPriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfUpdProductPriceKeyReleased
        // TODO add your handling code here:
        String text = jtfUpdProductPrice.getText();
        
        //allow only digits
        if (text.matches("\\d*")) {
            // The input is valid
            jtfUpdProductPrice.setText(text);
        } else {
            // The input is not valid
            JOptionPane.showMessageDialog(this, "Please enter numbers only.", "Input Error", JOptionPane.ERROR_MESSAGE);
            jtfUpdProductPrice.setText("");
        }
    }//GEN-LAST:event_jtfUpdProductPriceKeyReleased

    private void jtfUpdProductQuantityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfUpdProductQuantityKeyReleased
        // TODO add your handling code here:
        String text = jtfUpdProductQuantity.getText();
        
        //allow only digits
        if (text.matches("\\d*")) {
            // The input is valid
            jtfUpdProductQuantity.setText(text);
        } else {
            // The input is not valid
            JOptionPane.showMessageDialog(this, "Please enter numbers only.", "Input Error", JOptionPane.ERROR_MESSAGE);
            jtfUpdProductQuantity.setText("");
        }
    }//GEN-LAST:event_jtfUpdProductQuantityKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }
    
    public String generateRandomAlphanumericString(int length) {
        StringBuilder sb = new StringBuilder(length);
        
        for (int i = 0; i < length; i++) {
            int randomIndex = SECURE_RANDOM.nextInt(ALPHANUMERIC_CHARACTERS.length());
            char randomChar = ALPHANUMERIC_CHARACTERS.charAt(randomIndex);
            sb.append(randomChar);
        }
        return sb.toString();
    }
    
    public void isAdmin(boolean isAdmin) {
        btnAddProduct.setEnabled(isAdmin);
        btnUpdateProduct.setEnabled(isAdmin);
        btnDeleteProduct.setEnabled(isAdmin);
    }
    
    private void forUpdateTab(boolean isEnabled) {
        btnUpdProduct.setEnabled(isEnabled);
        btnUpdClear.setEnabled(isEnabled);
        jtfUpdProductName.setEnabled(isEnabled);
        jtfUpdProductBrand.setEnabled(isEnabled);
        jtfUpdProductPrice.setEnabled(isEnabled);
        jtfUpdProductQuantity.setEnabled(isEnabled);
    }
    
    private void fillListView() {
        try {
            String query = "SELECT * FROM tblproduct";
            statement = con.prepareStatement(query);
            result = statement.executeQuery();
            DefaultTableModel tmMain = (DefaultTableModel)jtMain.getModel();
            DefaultTableModel tmAdd = (DefaultTableModel)jtAddProduct.getModel();                    
            DefaultTableModel tmUpd = (DefaultTableModel)jtUpdateProduct.getModel();                     
            DefaultTableModel tmDel = (DefaultTableModel)jtDeleteProduct.getModel();
            tmMain.setRowCount(0);
            tmAdd.setRowCount(0); 
            tmUpd.setRowCount(0);
            tmDel.setRowCount(0);    
            while(result.next()) {
                Object o[] = {result.getString("product_id"), result.getString("product_name"),
                              result.getString("product_brand"),result.getInt("product_price"),
                              result.getInt("product_quantity")
                };
                tmMain.addRow(o);
                tmAdd.addRow(o);
                tmUpd.addRow(o);
                tmDel.addRow(o);
            }                       
        } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error in Product Grid View....." + e);
        }
    }
    
    public void setIcon() {
        String imagePath = "myImg/gramLogo.png";
        URL url = getClass().getClassLoader().getResource(imagePath);
        ImageIcon icon = new ImageIcon(url);
        setIconImage(icon.getImage());
    }
    
    private void displayLogo(){ 
        String[] imageNames = {"neustLogo.png", "logoutLogo.png"};
        JLabel[] labels = {jlNeustLogo, jlLogoutLogo};
        for(int i = 0; i < labels.length; i++) {
            ImageIcon icon = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("myImg/" + imageNames[i])));
            Image img1 = icon.getImage();
            Image img2 = img1.getScaledInstance(labels[i].getWidth(), labels[i].getHeight(), Image.SCALE_SMOOTH);
            ImageIcon i2 = new ImageIcon(img2);
            labels[i].setIcon(i2);
        }
    }
        
    private void jtHeader() {
        Font headerFont = new Font("Segoe UI", Font.BOLD, 12);
        jtMain.getTableHeader().setFont(headerFont);
        jtAddProduct.getTableHeader().setFont(headerFont);
        jtUpdateProduct.getTableHeader().setFont(headerFont);
        jtDeleteProduct.getTableHeader().setFont(headerFont);        
        // Set the background color for the header
        Color headerBackgroundColor = new Color(248,147,24);
        jtMain.getTableHeader().setBackground(headerBackgroundColor);
        jtAddProduct.getTableHeader().setBackground(headerBackgroundColor);
        jtUpdateProduct.getTableHeader().setBackground(headerBackgroundColor);
        jtDeleteProduct.getTableHeader().setBackground(headerBackgroundColor);     
        // Set the foreground color for the header
        Color headerForegroundColor = Color.BLACK;
        jtMain.getTableHeader().setForeground(headerForegroundColor);
        jtAddProduct.getTableHeader().setForeground(headerForegroundColor);
        jtUpdateProduct.getTableHeader().setForeground(headerForegroundColor);
        jtDeleteProduct.getTableHeader().setForeground(headerForegroundColor);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCancel;
    private javax.swing.JButton btnAddClear;
    private javax.swing.JButton btnAddProduct;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelCancel;
    private javax.swing.JButton btnDelClear;
    private javax.swing.JButton btnDelProduct;
    private javax.swing.JButton btnDeleteProduct;
    private javax.swing.JButton btnSaveProduct;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdCancel;
    private javax.swing.JButton btnUpdClear;
    private javax.swing.JButton btnUpdProduct;
    private javax.swing.JButton btnUpdateProduct;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JCheckBox jcbReadQR;
    private javax.swing.JLabel jlLogoutLogo;
    private javax.swing.JLabel jlNeustLogo;
    private javax.swing.JLabel jlQrCode;
    private javax.swing.JLabel jlSelectedProduct;
    private javax.swing.JPanel jpAddProduct;
    private javax.swing.JPanel jpDeleteProduct;
    private javax.swing.JPanel jpMainForm;
    private javax.swing.JPanel jpUpdateProduct;
    private javax.swing.JTable jtAddProduct;
    private javax.swing.JTable jtDeleteProduct;
    private javax.swing.JTable jtMain;
    private javax.swing.JTable jtUpdateProduct;
    private javax.swing.JTextField jtfAddProductBrand;
    private javax.swing.JTextField jtfAddProductName;
    private javax.swing.JTextField jtfAddProductPrice;
    private javax.swing.JTextField jtfAddProductQuantity;
    private javax.swing.JTextField jtfSearch;
    private javax.swing.JTextField jtfUpdProductBrand;
    private javax.swing.JTextField jtfUpdProductId;
    private javax.swing.JTextField jtfUpdProductName;
    private javax.swing.JTextField jtfUpdProductPrice;
    private javax.swing.JTextField jtfUpdProductQuantity;
    private javax.swing.JTabbedPane jtpOptions;
    // End of variables declaration//GEN-END:variables
}
